import{_ as n,o as a,c as l,V as p,C as s}from"./chunks/framework.b09b2e74.js";const h=JSON.parse('{"title":"元组","description":"","frontmatter":{},"headers":[],"relativePath":"typescript/tuple.md","lastUpdated":1682053110000}'),o={name:"typescript/tuple.md"},e=p(`<h1 id="元组" tabindex="-1">元组 <a class="header-anchor" href="#元组" aria-label="Permalink to &quot;元组&quot;">​</a></h1><h2 id="声明方式" tabindex="-1">声明方式 <a class="header-anchor" href="#声明方式" aria-label="Permalink to &quot;声明方式&quot;">​</a></h2><p>元组可以像数组一样被解构，解构的变量得到相应元组元素的类型：</p><div class="language-TypeScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">let </span><span style="color:#BD976A;">tuple</span><span style="color:#666666;">: [</span><span style="color:#5DA9A7;">number</span><span style="color:#666666;">, </span><span style="color:#5DA9A7;">string</span><span style="color:#666666;">, </span><span style="color:#5DA9A7;">boolean</span><span style="color:#666666;">] </span><span style="color:#CB7676;">= </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">7</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">hello</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4D9375;">true</span><span style="color:#666666;">];</span></span>
<span class="line"><span style="color:#CB7676;">let </span><span style="color:#666666;">[</span><span style="color:#BD976A;">a</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">c</span><span style="color:#666666;">]</span><span style="color:#CB7676;"> = </span><span style="color:#BD976A;">tuple</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">a</span><span style="color:#666666;">);</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 7</span></span>
<span class="line"><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">b</span><span style="color:#666666;">);</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// hello</span></span>
<span class="line"><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">c</span><span style="color:#666666;">);</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// true</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">let </span><span style="color:#B07D48;">tuple</span><span style="color:#999999;">: [</span><span style="color:#2E808F;">number</span><span style="color:#999999;">, </span><span style="color:#2E808F;">string</span><span style="color:#999999;">, </span><span style="color:#2E808F;">boolean</span><span style="color:#999999;">] </span><span style="color:#AB5959;">= </span><span style="color:#999999;">[</span><span style="color:#2F798A;">7</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">hello</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">];</span></span>
<span class="line"><span style="color:#AB5959;">let </span><span style="color:#999999;">[</span><span style="color:#B07D48;">a</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">c</span><span style="color:#999999;">]</span><span style="color:#AB5959;"> = </span><span style="color:#B07D48;">tuple</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">a</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 7</span></span>
<span class="line"><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">b</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// hello</span></span>
<span class="line"><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">c</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>当访问一个越界的元素会报错。</p><div class="language-TypeScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">let </span><span style="color:#BD976A;">tuple</span><span style="color:#666666;">: [</span><span style="color:#5DA9A7;">number</span><span style="color:#666666;">, </span><span style="color:#5DA9A7;">string</span><span style="color:#666666;">, </span><span style="color:#5DA9A7;">boolean</span><span style="color:#666666;">] </span><span style="color:#CB7676;">= </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">7</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">hello</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4D9375;">true</span><span style="color:#666666;">];</span></span>
<span class="line"><span style="color:#BD976A;">tuple</span><span style="color:#666666;">[</span><span style="color:#4C9A91;">4</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">world</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// Error, Property &#39;4&#39; does not exist on type &#39;[number, string, boolean]&#39;.</span></span>
<span class="line"><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">tuple</span><span style="color:#666666;">[</span><span style="color:#4C9A91;">5</span><span style="color:#666666;">].</span><span style="color:#80A665;">toString</span><span style="color:#666666;">());</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// Error, Property &#39;5&#39; does not exist on type &#39;[number, string, boolean]&#39;.</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">let </span><span style="color:#B07D48;">tuple</span><span style="color:#999999;">: [</span><span style="color:#2E808F;">number</span><span style="color:#999999;">, </span><span style="color:#2E808F;">string</span><span style="color:#999999;">, </span><span style="color:#2E808F;">boolean</span><span style="color:#999999;">] </span><span style="color:#AB5959;">= </span><span style="color:#999999;">[</span><span style="color:#2F798A;">7</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">hello</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">];</span></span>
<span class="line"><span style="color:#B07D48;">tuple</span><span style="color:#999999;">[</span><span style="color:#2F798A;">4</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">world</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// Error, Property &#39;4&#39; does not exist on type &#39;[number, string, boolean]&#39;.</span></span>
<span class="line"><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">tuple</span><span style="color:#999999;">[</span><span style="color:#2F798A;">5</span><span style="color:#999999;">].</span><span style="color:#59873A;">toString</span><span style="color:#999999;">());</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// Error, Property &#39;5&#39; does not exist on type &#39;[number, string, boolean]&#39;.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>元组的声明和使用需要注意一下一点</p><div class="language-TypeScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// 当前元组的长度是 3</span></span>
<span class="line"><span style="color:#CB7676;">let </span><span style="color:#BD976A;">tuple</span><span style="color:#666666;">: [</span><span style="color:#5DA9A7;">number</span><span style="color:#666666;">, </span><span style="color:#5DA9A7;">string</span><span style="color:#666666;">, </span><span style="color:#5DA9A7;">boolean</span><span style="color:#666666;">] </span><span style="color:#CB7676;">= </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">7</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">hello</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4D9375;">true</span><span style="color:#666666;">];</span></span>
<span class="line"><span style="color:#758575DD;">// 可以往元组里面 push</span></span>
<span class="line"><span style="color:#BD976A;">tuple</span><span style="color:#666666;">.</span><span style="color:#80A665;">push</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">a</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#758575DD;">// 但是无法通过索引读取</span></span>
<span class="line"><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">tuple</span><span style="color:#666666;">[</span><span style="color:#4C9A91;">3</span><span style="color:#666666;">])</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// ❌ Tuple type &#39;[number, string, boolean]&#39; of length &#39;3&#39; has no element at index &#39;3&#39;.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// 可以通过迭代器访问添加的元素</span></span>
<span class="line"><span style="color:#BD976A;">tuple</span><span style="color:#666666;">.</span><span style="color:#80A665;">forEach</span><span style="color:#666666;">((</span><span style="color:#BD976A;">item</span><span style="color:#666666;">)=&gt;{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">item</span><span style="color:#666666;">);</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 7, &quot;hello&quot;, true, &#39;a&#39;</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// 当前元组的长度是 3</span></span>
<span class="line"><span style="color:#AB5959;">let </span><span style="color:#B07D48;">tuple</span><span style="color:#999999;">: [</span><span style="color:#2E808F;">number</span><span style="color:#999999;">, </span><span style="color:#2E808F;">string</span><span style="color:#999999;">, </span><span style="color:#2E808F;">boolean</span><span style="color:#999999;">] </span><span style="color:#AB5959;">= </span><span style="color:#999999;">[</span><span style="color:#2F798A;">7</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">hello</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">];</span></span>
<span class="line"><span style="color:#A0ADA0;">// 可以往元组里面 push</span></span>
<span class="line"><span style="color:#B07D48;">tuple</span><span style="color:#999999;">.</span><span style="color:#59873A;">push</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">a</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#A0ADA0;">// 但是无法通过索引读取</span></span>
<span class="line"><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">tuple</span><span style="color:#999999;">[</span><span style="color:#2F798A;">3</span><span style="color:#999999;">])</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// ❌ Tuple type &#39;[number, string, boolean]&#39; of length &#39;3&#39; has no element at index &#39;3&#39;.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// 可以通过迭代器访问添加的元素</span></span>
<span class="line"><span style="color:#B07D48;">tuple</span><span style="color:#999999;">.</span><span style="color:#59873A;">forEach</span><span style="color:#999999;">((</span><span style="color:#B07D48;">item</span><span style="color:#999999;">)=&gt;{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">item</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 7, &quot;hello&quot;, true, &#39;a&#39;</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="元组的结构" tabindex="-1">元组的结构 <a class="header-anchor" href="#元组的结构" aria-label="Permalink to &quot;元组的结构&quot;">​</a></h2><p>和数组一样，你可以用<code>...</code>对元组的其余部分进行解构，以得到一个子元组：</p><div class="language-TypeScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">let </span><span style="color:#BD976A;">tuple</span><span style="color:#666666;">: [</span><span style="color:#5DA9A7;">number</span><span style="color:#666666;">, </span><span style="color:#5DA9A7;">string</span><span style="color:#666666;">, </span><span style="color:#5DA9A7;">boolean</span><span style="color:#666666;">] </span><span style="color:#CB7676;">= </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">7</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">hello</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4D9375;">true</span><span style="color:#666666;">];</span></span>
<span class="line"><span style="color:#CB7676;">let </span><span style="color:#666666;">[</span><span style="color:#BD976A;">a</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#666666;">...</span><span style="color:#BD976A;">b</span><span style="color:#666666;">]</span><span style="color:#CB7676;"> = </span><span style="color:#BD976A;">tuple</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// b: [&quot;hello&quot;, true]</span></span>
<span class="line"><span style="color:#CB7676;">let </span><span style="color:#666666;">[</span><span style="color:#BD976A;">a</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">c</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#666666;">...</span><span style="color:#BD976A;">d</span><span style="color:#666666;">]</span><span style="color:#CB7676;"> = </span><span style="color:#BD976A;">tuple</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// d: []</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">let </span><span style="color:#B07D48;">tuple</span><span style="color:#999999;">: [</span><span style="color:#2E808F;">number</span><span style="color:#999999;">, </span><span style="color:#2E808F;">string</span><span style="color:#999999;">, </span><span style="color:#2E808F;">boolean</span><span style="color:#999999;">] </span><span style="color:#AB5959;">= </span><span style="color:#999999;">[</span><span style="color:#2F798A;">7</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">hello</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">];</span></span>
<span class="line"><span style="color:#AB5959;">let </span><span style="color:#999999;">[</span><span style="color:#B07D48;">a</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#999999;">...</span><span style="color:#B07D48;">b</span><span style="color:#999999;">]</span><span style="color:#AB5959;"> = </span><span style="color:#B07D48;">tuple</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// b: [&quot;hello&quot;, true]</span></span>
<span class="line"><span style="color:#AB5959;">let </span><span style="color:#999999;">[</span><span style="color:#B07D48;">a</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">c</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#999999;">...</span><span style="color:#B07D48;">d</span><span style="color:#999999;">]</span><span style="color:#AB5959;"> = </span><span style="color:#B07D48;">tuple</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// d: []</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>当然我们也可以忽略尾部元素，或者忽略其他元素：</p><div class="language-TypeScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">let </span><span style="color:#BD976A;">tuple</span><span style="color:#666666;">: [</span><span style="color:#5DA9A7;">number</span><span style="color:#666666;">, </span><span style="color:#5DA9A7;">string</span><span style="color:#666666;">, </span><span style="color:#5DA9A7;">boolean</span><span style="color:#666666;">] </span><span style="color:#CB7676;">= </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">7</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">hello</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4D9375;">true</span><span style="color:#666666;">];</span></span>
<span class="line"><span style="color:#CB7676;">let </span><span style="color:#666666;">[</span><span style="color:#BD976A;">a</span><span style="color:#666666;">]</span><span style="color:#CB7676;"> = </span><span style="color:#BD976A;">tuple</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// a: 7</span></span>
<span class="line"><span style="color:#CB7676;">let </span><span style="color:#666666;">[,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">]</span><span style="color:#CB7676;"> = </span><span style="color:#BD976A;">tuple</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// b: &quot;hello&quot;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">let </span><span style="color:#B07D48;">tuple</span><span style="color:#999999;">: [</span><span style="color:#2E808F;">number</span><span style="color:#999999;">, </span><span style="color:#2E808F;">string</span><span style="color:#999999;">, </span><span style="color:#2E808F;">boolean</span><span style="color:#999999;">] </span><span style="color:#AB5959;">= </span><span style="color:#999999;">[</span><span style="color:#2F798A;">7</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">hello</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">];</span></span>
<span class="line"><span style="color:#AB5959;">let </span><span style="color:#999999;">[</span><span style="color:#B07D48;">a</span><span style="color:#999999;">]</span><span style="color:#AB5959;"> = </span><span style="color:#B07D48;">tuple</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// a: 7</span></span>
<span class="line"><span style="color:#AB5959;">let </span><span style="color:#999999;">[,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">]</span><span style="color:#AB5959;"> = </span><span style="color:#B07D48;">tuple</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// b: &quot;hello&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="元组的元素别名" tabindex="-1">元组的元素别名 <a class="header-anchor" href="#元组的元素别名" aria-label="Permalink to &quot;元组的元素别名&quot;">​</a></h2><blockquote><p>元组类型在严格类型检查的 API 中非常有用，其中每个元素的含义都是 &quot;显而易见 &quot;的。这给了我们灵活性，当我们对变量进行解构时，我们可以对其进行任何命名。在上面的例子中，我们能够将元素 0 和 1 命名为我们想要的任何东西。</p></blockquote><div class="language-TypeScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// tuple[0] 的别名是 age，tuple[1]的别名是 hasPartner</span></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">tuple</span><span style="color:#666666;">: [</span><span style="color:#80A665;">age</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">number</span><span style="color:#666666;">, </span><span style="color:#80A665;">hasPartner</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">boolean</span><span style="color:#666666;">] </span><span style="color:#CB7676;">= </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">18</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4D9375;">false</span><span style="color:#666666;">];</span></span>
<span class="line"><span style="color:#758575DD;">// 无法通过别名访问到具体的值</span></span>
<span class="line"><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">tuple.age:</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">tuple</span><span style="color:#666666;">[</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">age</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">]);</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// tuple.age: undefined</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// tuple[0] 的别名是 age，tuple[1]的别名是 hasPartner</span></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">tuple</span><span style="color:#999999;">: [</span><span style="color:#59873A;">age</span><span style="color:#999999;">: </span><span style="color:#2E808F;">number</span><span style="color:#999999;">, </span><span style="color:#59873A;">hasPartner</span><span style="color:#999999;">: </span><span style="color:#2E808F;">boolean</span><span style="color:#999999;">] </span><span style="color:#AB5959;">= </span><span style="color:#999999;">[</span><span style="color:#2F798A;">18</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#1E754F;">false</span><span style="color:#999999;">];</span></span>
<span class="line"><span style="color:#A0ADA0;">// 无法通过别名访问到具体的值</span></span>
<span class="line"><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">tuple.age:</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">tuple</span><span style="color:#999999;">[</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">age</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">]);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// tuple.age: undefined</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>唯一的用处，就是在编辑器中会弹出提示，提示这个元素代表着什么意思:</p>`,17),t=s("iframe",{height:"480",style:{width:"100%"},scrolling:"no",src:"https://www.typescriptlang.org/zh/play?#code/PTAEBcFcAcBsFMDaAGAuqQIW6GolQsCqHozUAQwHN5AYf6jiQEZVt9QALQgZwAVCAncAO3k4BQAYwD2PFuAgwEALlCIS8OT0gBbAEb8ANE1YdufTnPUiRCQj3QBeedQAcOgGaFYLeKgDcwsSzPwAdLAixAAUAOSUCP6KMmE6kUhoAJQeQA",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
`,-1),r=s("p",null,"由于不是每个用户都对元组持有肯定的态度，所以是否使用元组需重新考虑一下，使用具有描述性属性名称的对象是否对你的 API 更好。",-1),c=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"元组与数组的区别"),s("ol",null,[s("li",null,"在 TypeScript 中，定义数组时，无需指定数组的长度。元组是一个长度固定的的数组。"),s("li",null,"数组与元组都能指定不同子元素类型，区别在于数组子元素的类型与索引无关，元组必须按照索引给出的类型去声明子元素的类型。"),s("li",null,"元组另一个区别于数组的地方，就是元组的每一个元素，都可以设定别名。")])],-1),y=[e,t,r,c];function A(i,D,u,B,d,b){return a(),l("div",null,y)}const g=n(o,[["render",A]]);export{h as __pageData,g as default};
