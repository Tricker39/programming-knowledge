import{_ as n,o as a,c as l,V as s,C as p}from"./chunks/framework.b09b2e74.js";const E=JSON.parse('{"title":"接口","description":"","frontmatter":{},"headers":[],"relativePath":"typescript/interface.md","lastUpdated":1682053110000}'),o={name:"typescript/interface.md"},e=s(`<h1 id="接口" tabindex="-1">接口 <a class="header-anchor" href="#接口" aria-label="Permalink to &quot;接口&quot;">​</a></h1><h2 id="什么是接口" tabindex="-1">什么是接口 <a class="header-anchor" href="#什么是接口" aria-label="Permalink to &quot;什么是接口&quot;">​</a></h2><blockquote><p>在面向对象语言中，接口（Interface）是一个很重要的概念，它是对行为的抽象，而具体如何行动需要由类（classes）去实现（implement）。</p><p>TypeScript 的核心原则之一是对值所具有的结构进行类型检查。 它有时被称做“鸭式辨型法”或“结构性子类型化”。 在 TypeScript 里，接口的作用就是为这些类型命名和为你的代码或第三方代码定义契约。</p></blockquote><p>接口是对 JavaScript 本身的随意性进行约束，通过定义一个接口，约定了变量、类、函数等应该按照什么样的格式进行声明，实现多人合作的一致性。TypeScript 编译器依赖接口用于类型检查，最终编译为 JavaScript 后，接口将会被移除。</p><h2 id="声明方式" tabindex="-1">声明方式 <a class="header-anchor" href="#声明方式" aria-label="Permalink to &quot;声明方式&quot;">​</a></h2><p>使用 interface 关键字进行声明，假如我们定义一个商品的接口，商品普遍的属性有颜色、形状、大小、价格等。</p><div class="language-Typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Typescript</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">interface</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA9A7;">IGoods</span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">color</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">string</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">shape</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">string</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">size</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">number</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">price</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">number</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">interface</span><span style="color:#393A34;"> </span><span style="color:#2E808F;">IGoods</span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">color</span><span style="color:#999999;">: </span><span style="color:#2E808F;">string</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">shape</span><span style="color:#999999;">: </span><span style="color:#2E808F;">string</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">size</span><span style="color:#999999;">: </span><span style="color:#2E808F;">number</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">price</span><span style="color:#999999;">: </span><span style="color:#2E808F;">number</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">Tips</p><ol><li>定义接口要首字母大写（推荐首字母使用 I 来定义接口，可以更加直观的知道这是一个接口）。</li><li>如果没有特殊声明，定义的变量比接口少了一些属性是不允许的，多一些属性也是不允许的，赋值的时候，变量的属性值必须和接口定义的属性值保持一致。</li></ol></div><h2 id="可选属性" tabindex="-1">可选属性 <a class="header-anchor" href="#可选属性" aria-label="Permalink to &quot;可选属性&quot;">​</a></h2><p>接口里的属性不全都是必需的。 有些是只在某些条件下存在，或者根本不存在。 可选属性在应用“option bags”模式时很常用，即给函数传入的参数对象中只有部分属性赋值了。我们把这一部分的属性称之为可选属性，带有可选属性的接口与普通的接口定义差不多，只是在可选属性名字定义的后面加一个?符号。</p><p>下面是应用了“option bags”的例子：</p><div class="language-TypeScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">interface</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA9A7;">Pet</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">swim</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">boolean</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">fly</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">boolean</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">run</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">boolean</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">nickname</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">string</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">bugAPet</span><span style="color:#666666;">(</span><span style="color:#BD976A;">pet</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">Pet</span><span style="color:#666666;">):</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA9A7;">Pet</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">let </span><span style="color:#BD976A;">dog</span><span style="color:#CB7676;"> = </span><span style="color:#666666;">{ </span><span style="color:#B8A965;">nickname</span><span style="color:#666666;">: </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">花花</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">, </span><span style="color:#B8A965;">run</span><span style="color:#666666;">: </span><span style="color:#4D9375;">true</span><span style="color:#666666;"> };</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#666666;">(</span><span style="color:#BD976A;">pet</span><span style="color:#666666;">.</span><span style="color:#BD976A;">nickname</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#BD976A;">dog</span><span style="color:#666666;">.</span><span style="color:#BD976A;">nickname</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">pet</span><span style="color:#666666;">.</span><span style="color:#BD976A;">nickname</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">dog</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">let </span><span style="color:#BD976A;">myPet</span><span style="color:#CB7676;"> = </span><span style="color:#80A665;">bugAPet</span><span style="color:#666666;">({ </span><span style="color:#B8A965;">nickname</span><span style="color:#666666;">: </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">小白</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;"> });</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">interface</span><span style="color:#393A34;"> </span><span style="color:#2E808F;">Pet</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">swim</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E808F;">boolean</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">fly</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E808F;">boolean</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">run</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E808F;">boolean</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">nickname</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E808F;">string</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">bugAPet</span><span style="color:#999999;">(</span><span style="color:#B07D48;">pet</span><span style="color:#999999;">: </span><span style="color:#2E808F;">Pet</span><span style="color:#999999;">):</span><span style="color:#393A34;"> </span><span style="color:#2E808F;">Pet</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">let </span><span style="color:#B07D48;">dog</span><span style="color:#AB5959;"> = </span><span style="color:#999999;">{ </span><span style="color:#998418;">nickname</span><span style="color:#999999;">: </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">花花</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">, </span><span style="color:#998418;">run</span><span style="color:#999999;">: </span><span style="color:#1E754F;">true</span><span style="color:#999999;"> };</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">if</span><span style="color:#999999;">(</span><span style="color:#B07D48;">pet</span><span style="color:#999999;">.</span><span style="color:#B07D48;">nickname</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">dog</span><span style="color:#999999;">.</span><span style="color:#B07D48;">nickname</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">pet</span><span style="color:#999999;">.</span><span style="color:#B07D48;">nickname</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">dog</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">let </span><span style="color:#B07D48;">myPet</span><span style="color:#AB5959;"> = </span><span style="color:#59873A;">bugAPet</span><span style="color:#999999;">({ </span><span style="color:#998418;">nickname</span><span style="color:#999999;">: </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">小白</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;"> });</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>可选属性的好处：</p><ol><li>可以对可能存在的属性进行预定义，</li><li>可以捕获引用了不存在的属性时的错误。</li></ol>`,14),r=p("iframe",{height:"480",style:{width:"100%"},scrolling:"no",src:"https://www.typescriptlang.org/zh/play?#code/JYOwLgpgTgZghgYwgAgAoTMg3gKGf5AZwHdgBbAfgC5kAjAe3oBsI4QBuPAmJgT2rqMWbTgWRQAriAENmrDl3whgCANYg4ZCAMJgooAOacAvjhwJ6IXXQkGAgukwBeZAAoADhhqOAlN4zITgB82IrILJgAJvQG-s7YyMpqGlo0AOSA5JqA1sppADTiUjR6EhD5tHBQqkWSKMaiBFAYElAgyNFGOMZAA",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
`,-1),c=s(`<h2 id="只读属性" tabindex="-1">只读属性 <a class="header-anchor" href="#只读属性" aria-label="Permalink to &quot;只读属性&quot;">​</a></h2><p>一些对象属性只能在对象刚刚创建的时候修改其值。 你可以在属性名前用 readonly 来指定只读属性:</p><div class="language-TypeScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">interface</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA9A7;">IPosition</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">readonly</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">longitude</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">number</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">readonly</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">latitude</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">number</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">interface</span><span style="color:#393A34;"> </span><span style="color:#2E808F;">IPosition</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">readonly</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">longitude</span><span style="color:#999999;">: </span><span style="color:#2E808F;">number</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">readonly</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">latitude</span><span style="color:#999999;">: </span><span style="color:#2E808F;">number</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>你可以通过赋值一个对象字面量来构造一个 Position。 赋值后，longitude 和 latitude 再也不能被改变了。</p><div class="language-TypeScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">interface</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA9A7;">IPosition</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">readonly</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">longitude</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">number</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">readonly</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">latitude</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">number</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">beijing</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">IPosition</span><span style="color:#666666;"> </span><span style="color:#CB7676;">= </span><span style="color:#666666;">{ </span><span style="color:#B8A965;">longitude</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">116.397128</span><span style="color:#666666;">, </span><span style="color:#B8A965;">latitude</span><span style="color:#666666;">:</span><span style="color:#4C9A91;">39.916527</span><span style="color:#666666;"> }</span></span>
<span class="line"><span style="color:#BD976A;">beijing</span><span style="color:#666666;">.</span><span style="color:#BD976A;">longitude</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">115.397128</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// Cannot assign to &#39;longitude&#39; because it is a read-only property.</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">interface</span><span style="color:#393A34;"> </span><span style="color:#2E808F;">IPosition</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">readonly</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">longitude</span><span style="color:#999999;">: </span><span style="color:#2E808F;">number</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">readonly</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">latitude</span><span style="color:#999999;">: </span><span style="color:#2E808F;">number</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">beijing</span><span style="color:#999999;">: </span><span style="color:#2E808F;">IPosition</span><span style="color:#999999;"> </span><span style="color:#AB5959;">= </span><span style="color:#999999;">{ </span><span style="color:#998418;">longitude</span><span style="color:#999999;">: </span><span style="color:#2F798A;">116.397128</span><span style="color:#999999;">, </span><span style="color:#998418;">latitude</span><span style="color:#999999;">:</span><span style="color:#2F798A;">39.916527</span><span style="color:#999999;"> }</span></span>
<span class="line"><span style="color:#B07D48;">beijing</span><span style="color:#999999;">.</span><span style="color:#B07D48;">longitude</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">115.397128</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// Cannot assign to &#39;longitude&#39; because it is a read-only property.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>使用 readonly 修饰符并不一定意味着一个值是完全不可改变的--或者换句话说，它的内部内容不能被改变。它只是意味着该属性本身不能被重新写入。</p><div class="language-TypeScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,7),t=[e,r,c];function y(i,A,D,d,B,u){return a(),l("div",null,t)}const m=n(o,[["render",y]]);export{E as __pageData,m as default};
